{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","storage","loading","auth","signInWithEmailAndPassword","email","password","then","response","user","emailVerified","alert","loginResponse","key","value","JSON","stringify","setItem","navigate","replaceUrl","error","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAJlC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAT3B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,4EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,qDAAD;AAPN,OAAT,CAS2B,GAAfD,eAAe,CAAf;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFE,SAAS;AAIpB,2BAAoBC,MAApB,EAA4CC,OAA5C,EAAqE;AAAA;;AAAjD,eAAAD,MAAA,GAAAA,MAAA;AAAwB,eAAAC,OAAA,GAAAA,OAAA;AAD5C,eAAAC,OAAA,GAAU,KAAV;AACwE;;AAJpD;AAAA;AAAA,qCAMT,CACV;AAPmB;AAAA;AAAA,kCASN;;;;;;;;2BACR,KAAKA,O;;;;;;;;AACJ,2BAAKA,OAAL,GAAe,IAAf;;;AACL,0BAAI;AACF,yEAASC,IAAT,GAAgBC,0BAAhB,CAA2C,KAAKC,KAAhD,EAAuD,KAAKC,QAA5D,EACDC,IADC,CACI,UAAMC,QAAN;AAAA,iCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACjBA,QAAQ,CAACC,IAAT,CAAcC,aADG;AAAA;AAAA;AAAA;;AAEpBC,yCAAK,CAAC,0CAAD,CAAL;AACA,yCAAKT,OAAL,GAAe,KAAf;AAHoB;;AAAA;AAMlBU,iDANkB,GAMF;AAAEC,yCAAG,EAAE,iBAAP;AAA0BC,2CAAK,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACC,IAAxB;AAAjC,qCANE;AAAA;AAOtB,2CAAM,KAAKR,OAAL,CAAagB,OAAb,CAAqBL,aAArB,CAAN;;AAPsB;AAQtB,yCAAKV,OAAL,GAAe,KAAf;AACA,yCAAKF,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,mBAAD,CAArB,EAA4C;AAC1CC,gDAAU,EAAE;AAD8B,qCAA5C;;AATsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAlB;AAAA,yBADJ,WAcK,UAAAC,KAAK,EAAI;AACd,+BAAI,CAAClB,OAAL,GAAe,KAAf;AACAS,+BAAK,CAACS,KAAD,CAAL;AACD,yBAjBC;AAkBD,uBAnBD,CAmBE,OAAOA,KAAP,EAAc;AACdT,6BAAK,CAAC,0CAAD,CAAL;AACA,6BAAKT,OAAL,GAAe,KAAf;AACD;;;;;;;;;AACF;AAnCmB;;AAAA;AAAA,S;;;;gBATb;;gBACA;;;;AAQIH,eAAS,6DALrB,gEAAU;AACTsB,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,OAAV,CAKqB,GAATvB,SAAS,CAAT","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input placeholder=\\\"john.doe@domain.com\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <br>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input placeholder=\\\"password12345\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n      </ion-item>\\n      <br>\\n      <div style=\\\"text-align: center;\\\">\\n        <a [routerLink]=\\\"['/register']\\\">Create an Account</a>\\n      </div>\\n      <br>\\n      <ion-button expand=\\\"block\\\" color=\\\"dark\\\" (click)=\\\"login()\\\">\\n        <span *ngIf=\\\"!loading\\\">Login</span>\\n        <span *ngIf=\\\"loading\\\">\\n          <ion-spinner color=\\\"secondary\\\" name=\\\"bubbles\\\"></ion-spinner>\\n        </span>\\n      </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-card {\\n  top: 30%;\\n}\\n\\nion-item {\\n  --highlight-color-focused: #FFFFFF;\\n  --color-focused: #FFFFFF;\\n}\\n\\nion-item.item-has-focus ion-label {\\n  color: #FFFFFF !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksUUFBQTtBQUNKOztBQUVBO0VBQ0ksa0NBQUE7RUFDQSx3QkFBQTtBQUNKOztBQUFJO0VBQ0kseUJBQUE7QUFFUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcbiAgICB0b3A6IDMwJTtcbn1cblxuaW9uLWl0ZW0ge1xuICAgIC0taGlnaGxpZ2h0LWNvbG9yLWZvY3VzZWQ6ICNGRkZGRkY7XG4gICAgLS1jb2xvci1mb2N1c2VkOiAjRkZGRkZGO1xuICAgICYuaXRlbS1oYXMtZm9jdXMgaW9uLWxhYmVsIHtcbiAgICAgICAgY29sb3I6ICNGRkZGRkYgIWltcG9ydGFudDtcbiAgICB9XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from 'src/app/services/storage.service';\nimport firebase from 'firebase';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  email;\n  password;\n  loading = false;\n  constructor(private router: Router, private storage: StorageService) { }\n\n  ngOnInit() {\n  }\n\n  async login() {\n    if (this.loading) return;\n    else this.loading = true;\n    try {\n      firebase.auth().signInWithEmailAndPassword(this.email, this.password)\n    .then(async response => {\n      if (!response.user.emailVerified) {\n        alert(\"Please make sure your email is validated\");\n        this.loading = false;\n        return;\n      }\n      let loginResponse = { key: \"loggedInTracker\", value: JSON.stringify(response.user) };\n      await this.storage.setItem(loginResponse);\n      this.loading = false;\n      this.router.navigate(['/folder/Directory'], {\n        replaceUrl: true\n      });\n    })\n    .catch(error => {\n      this.loading = false;\n      alert(error);\n    });\n    } catch (error) {\n      alert(\"Please make sure both fields are correct\");\n      this.loading = false;\n    }\n  }\n}\n"]}